{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vrishitha\\\\Fitness-tracker\\\\fitness-tracker-frontend\\\\src\\\\components\\\\trainer\\\\createPlan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport { createPlan } from '../../api/api'; // API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePlan = () => {\n  _s();\n  const [planName, setPlanName] = useState('');\n  const [exerciseType, setExerciseType] = useState('');\n  const [duration, setDuration] = useState('');\n  const [workoutType, setWorkoutType] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newPlan = {\n      name: planName,\n      exerciseType,\n      duration,\n      workoutType\n    };\n    try {\n      await createPlan(newPlan); // API call to create plan\n      alert('Plan created successfully');\n    } catch (err) {\n      console.error(err);\n      alert('Failed to create plan');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Training Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Plan Name\",\n        value: planName,\n        onChange: e => setPlanName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Exercise Type\",\n        value: exerciseType,\n        onChange: e => setExerciseType(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Duration (mins)\",\n        type: \"number\",\n        value: duration,\n        onChange: e => setDuration(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Workout Type\",\n        value: workoutType,\n        onChange: e => setWorkoutType(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePlan, \"NTmjNn+69E4a9gl3GbwRjzQGf8U=\");\n_c = CreatePlan;\nexport default CreatePlan;\nvar _c;\n$RefreshReg$(_c, \"CreatePlan\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","createPlan","jsxDEV","_jsxDEV","CreatePlan","_s","planName","setPlanName","exerciseType","setExerciseType","duration","setDuration","workoutType","setWorkoutType","handleSubmit","e","preventDefault","newPlan","name","alert","err","console","error","sx","p","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","required","type","variant","_c","$RefreshReg$"],"sources":["C:/Users/vrishitha/Fitness-tracker/fitness-tracker-frontend/src/components/trainer/createPlan.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Box } from '@mui/material';\r\nimport { createPlan } from '../../api/api'; // API service\r\n\r\nconst CreatePlan = () => {\r\n  const [planName, setPlanName] = useState('');\r\n  const [exerciseType, setExerciseType] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [workoutType, setWorkoutType] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newPlan = {\r\n      name: planName,\r\n      exerciseType,\r\n      duration,\r\n      workoutType\r\n    };\r\n    try {\r\n      await createPlan(newPlan);  // API call to create plan\r\n      alert('Plan created successfully');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to create plan');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <h3>Create Training Plan</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField \r\n          label=\"Plan Name\" \r\n          value={planName} \r\n          onChange={(e) => setPlanName(e.target.value)} \r\n          required \r\n        />\r\n        <TextField \r\n          label=\"Exercise Type\" \r\n          value={exerciseType} \r\n          onChange={(e) => setExerciseType(e.target.value)} \r\n          required \r\n        />\r\n        <TextField \r\n          label=\"Duration (mins)\" \r\n          type=\"number\"\r\n          value={duration} \r\n          onChange={(e) => setDuration(e.target.value)} \r\n          required \r\n        />\r\n        <TextField \r\n          label=\"Workout Type\" \r\n          value={workoutType} \r\n          onChange={(e) => setWorkoutType(e.target.value)} \r\n          required \r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">Create Plan</Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreatePlan;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}