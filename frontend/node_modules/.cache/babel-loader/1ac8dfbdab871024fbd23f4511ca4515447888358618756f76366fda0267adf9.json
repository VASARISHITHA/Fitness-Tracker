{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vrishitha\\\\Fitness-tracker\\\\frontend\\\\src\\\\components\\\\GoogleLoginButton.js\";\nimport React from \"react\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { auth, provider } from \"../firebase\";\nimport { sendLoginRequest } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoginButton = () => {\n  const handleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n\n      // Prompt for role\n      const role = prompt(\"Enter your role: trainer or trainee\").toLowerCase();\n\n      // Send to backend\n      const payload = {\n        name: user.displayName,\n        email: user.email,\n        googleId: user.uid,\n        role\n      };\n      const response = await sendLoginRequest(payload);\n      console.log(\"User logged in:\", response.data);\n      alert(`Logged in as ${response.data.role}`);\n    } catch (err) {\n      console.error(\"Google Login failed\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLogin,\n    children: \"Login with Google\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["React","signInWithPopup","auth","provider","sendLoginRequest","jsxDEV","_jsxDEV","GoogleLoginButton","handleLogin","result","user","role","prompt","toLowerCase","payload","name","displayName","email","googleId","uid","response","console","log","data","alert","err","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vrishitha/Fitness-tracker/frontend/src/components/GoogleLoginButton.js"],"sourcesContent":["import React from \"react\";\r\nimport { signInWithPopup } from \"firebase/auth\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { sendLoginRequest } from \"../services/api\";\r\n\r\nconst GoogleLoginButton = () => {\r\n  const handleLogin = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n\r\n      // Prompt for role\r\n      const role = prompt(\"Enter your role: trainer or trainee\").toLowerCase();\r\n\r\n      // Send to backend\r\n      const payload = {\r\n        name: user.displayName,\r\n        email: user.email,\r\n        googleId: user.uid,\r\n        role\r\n      };\r\n\r\n      const response = await sendLoginRequest(payload);\r\n      console.log(\"User logged in:\", response.data);\r\n      alert(`Logged in as ${response.data.role}`);\r\n    } catch (err) {\r\n      console.error(\"Google Login failed\", err);\r\n    }\r\n  };\r\n\r\n  return <button onClick={handleLogin}>Login with Google</button>;\r\n};\r\n\r\nexport default GoogleLoginButton;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,aAAa;AAC5C,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMR,eAAe,CAACC,IAAI,EAAEC,QAAQ,CAAC;MACpD,MAAMO,IAAI,GAAGD,MAAM,CAACC,IAAI;;MAExB;MACA,MAAMC,IAAI,GAAGC,MAAM,CAAC,qCAAqC,CAAC,CAACC,WAAW,CAAC,CAAC;;MAExE;MACA,MAAMC,OAAO,GAAG;QACdC,IAAI,EAAEL,IAAI,CAACM,WAAW;QACtBC,KAAK,EAAEP,IAAI,CAACO,KAAK;QACjBC,QAAQ,EAAER,IAAI,CAACS,GAAG;QAClBR;MACF,CAAC;MAED,MAAMS,QAAQ,GAAG,MAAMhB,gBAAgB,CAACU,OAAO,CAAC;MAChDO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC7CC,KAAK,CAAC,gBAAgBJ,QAAQ,CAACG,IAAI,CAACZ,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZJ,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;IAC3C;EACF,CAAC;EAED,oBAAOnB,OAAA;IAAQqB,OAAO,EAAEnB,WAAY;IAAAoB,QAAA,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACjE,CAAC;AAACC,EAAA,GA1BI1B,iBAAiB;AA4BvB,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}