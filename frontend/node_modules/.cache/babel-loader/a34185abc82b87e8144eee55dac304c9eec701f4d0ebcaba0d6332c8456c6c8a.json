{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vrishitha\\\\Fitness-tracker\\\\fitness-tracker-frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode'; // ✅ Corrected\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLoginSuccess = async credentialResponse => {\n    try {\n      const googleToken = credentialResponse.credential;\n      const decoded = jwtDecode(googleToken);\n      console.log('Decoded Token:', decoded); // Optional\n\n      localStorage.setItem('google_token', googleToken);\n      const res = await axios.post('http://localhost:5000/auth/google-login', {\n        token: googleToken\n      });\n      const {\n        role\n      } = res.data;\n      if (role === 'trainer') {\n        navigate('/dashboard/trainer');\n      } else if (role === 'trainee') {\n        navigate('/dashboard/trainee');\n      } else {\n        alert('Unknown role');\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      alert('Login failed, please try again');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleLoginSuccess,\n      onError: () => alert('Google Login Failed')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","jwtDecode","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","handleLoginSuccess","credentialResponse","googleToken","credential","decoded","console","log","localStorage","setItem","res","post","token","role","data","alert","error","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/vrishitha/Fitness-tracker/fitness-tracker-frontend/src/components/Login.js"],"sourcesContent":["import { GoogleLogin } from '@react-oauth/google';\r\nimport { jwtDecode } from 'jwt-decode'; // ✅ Corrected\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginSuccess = async (credentialResponse) => {\r\n    try {\r\n      const googleToken = credentialResponse.credential;\r\n      const decoded = jwtDecode(googleToken);\r\n      console.log('Decoded Token:', decoded); // Optional\r\n\r\n      localStorage.setItem('google_token', googleToken);\r\n\r\n      const res = await axios.post('http://localhost:5000/auth/google-login', {\r\n        token: googleToken,\r\n      });\r\n\r\n      const { role } = res.data;\r\n\r\n      if (role === 'trainer') {\r\n        navigate('/dashboard/trainer');\r\n      } else if (role === 'trainee') {\r\n        navigate('/dashboard/trainee');\r\n      } else {\r\n        alert('Unknown role');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      alert('Login failed, please try again');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '100px' }}>\r\n      <h2>Login with Google</h2>\r\n      <GoogleLogin\r\n        onSuccess={handleLoginSuccess}\r\n        onError={() => alert('Google Login Failed')}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,kBAAkB,GAAG,MAAOC,kBAAkB,IAAK;IACvD,IAAI;MACF,MAAMC,WAAW,GAAGD,kBAAkB,CAACE,UAAU;MACjD,MAAMC,OAAO,GAAGZ,SAAS,CAACU,WAAW,CAAC;MACtCG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,OAAO,CAAC,CAAC,CAAC;;MAExCG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEN,WAAW,CAAC;MAEjD,MAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,yCAAyC,EAAE;QACtEC,KAAK,EAAET;MACT,CAAC,CAAC;MAEF,MAAM;QAAEU;MAAK,CAAC,GAAGH,GAAG,CAACI,IAAI;MAEzB,IAAID,IAAI,KAAK,SAAS,EAAE;QACtBb,QAAQ,CAAC,oBAAoB,CAAC;MAChC,CAAC,MAAM,IAAIa,IAAI,KAAK,SAAS,EAAE;QAC7Bb,QAAQ,CAAC,oBAAoB,CAAC;MAChC,CAAC,MAAM;QACLe,KAAK,CAAC,cAAc,CAAC;MACvB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCD,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,oBACElB,OAAA;IAAKoB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACtDvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3B,OAAA,CAACL,WAAW;MACViC,SAAS,EAAExB,kBAAmB;MAC9ByB,OAAO,EAAEA,CAAA,KAAMX,KAAK,CAAC,qBAAqB;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvCID,KAAK;EAAA,QACQH,WAAW;AAAA;AAAAgC,EAAA,GADxB7B,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}